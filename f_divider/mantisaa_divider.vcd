$date
	Mon Jan  2 20:57:48 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mantissa_divider_tb $end
$var wire 5 ! out [4:0] $end
$var reg 32 " in0 [31:0] $end
$var reg 32 # in1 [31:0] $end
$scope module u_mantisaa_divider $end
$var wire 32 $ in0 [31:0] $end
$var wire 32 % in1 [31:0] $end
$var wire 32 & iter_max [31:0] $end
$var wire 5 ' out [4:0] $end
$var reg 7 ( A [6:0] $end
$var reg 7 ) M [6:0] $end
$var reg 7 * M_two_complement [6:0] $end
$var reg 7 + Q [6:0] $end
$var reg 1 , carry_down $end
$var integer 32 - i [31:0] $end
$var integer 32 . shitf_cnt [31:0] $end
$scope function calIterBIt $end
$var reg 1 / bit_width $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
x/
b0 .
b110 -
0,
b1001110 +
b1011100 *
b100100 )
b1000 (
b111 '
b110 &
b100 %
b1100 $
b100 #
b1100 "
b111 !
$end
#1000
